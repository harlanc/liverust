version: '3.8'

# XIU test cluster
services:
  xiu1:
    image: "normkd/1688557675-e7114d7d37c4c113db29eba96c9d6e76:1.0.0"
    hostname: "xiu-1.test.local"
    ports:
      - 80:80
      - 443:443
      - 1935:1935
      - 1936:1936
      - 8080:8080

  xiu2:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 81:80
      - 444:443
      - 1937:1935
      - 1938:1936
      - 8081:8080

  xiu3:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 82:80
      - 445:443
      - 1939:1935
      - 1940:1936
      - 8082:8080


services:
  server:
    build:
      context: .
      target: final
    ports:
      - 80:80

# The commented out section below is an example of how to define a PostgreSQL
# database that your application can use. `depends_on` tells Docker Compose to
# start the database before your application. The `db-data` volume persists the
# database data between container restarts. The `db-password` secret is used
# to set the database password. You must create `db/password.txt` and add
# a password of your choosing to it before running `docker compose up`.
#     depends_on:
#       db:
#         condition: service_healthy
#   db:
#     image: postgres
#     restart: always
#     user: postgres
#     secrets:
#       - db-password
#     volumes:
#       - db-data:/var/lib/postgresql/data
#     environment:
#       - POSTGRES_DB=example
#       - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
#     expose:
#       - 5432
#     healthcheck:
#       test: [ "CMD", "pg_isready" ]
#       interval: 10s
#       timeout: 5s
#       retries: 5
# volumes:
#   db-data:
# secrets:
#   db-password:
#     file: db/password.txt
